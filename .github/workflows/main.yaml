name: Actions ðŸ˜Ž

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  actions: write
  checks: write
  pull-requests: write

jobs:
  test:
    name: Test my project ðŸ§ª
    runs-on: ubuntu-latest
    env:
      PROJECT_DIR: unity
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_DIR }}/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: unity
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build Windows âœ¨
    runs-on: ubuntu-latest
    env:
      PROJECT_DIR: unity
    steps:
      - name: Free disk space
        run: |
          echo "Disk space before:"
          df -h
          rm -rf /opt/hostedtoolcache
          rm -rf /usr/share/dotnet/
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Disk space after:"
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/cache@v3
        with:
          path: ${{ env.PROJECT_DIR }}/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build Windows project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: unity
          buildsPath: build/win
          targetPlatform: StandaloneWindows64
          allowDirtyBuild: true

      - uses: actions/upload-artifact@v4
        with:
          name: BuildWin
          path: build/win

  build-linux:
    name: Build Linux âœ¨
    runs-on: ubuntu-latest
    env:
      PROJECT_DIR: unity
    steps:
      - name: Free disk space
        run: |
          echo "Disk space before:"
          df -h
          rm -rf /opt/hostedtoolcache
          rm -rf /usr/share/dotnet/
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Disk space after:"
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/cache@v3
        with:
          path: ${{ env.PROJECT_DIR }}/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build Linux project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: unity
          buildsPath: build/linux
          targetPlatform: StandaloneLinux64
          allowDirtyBuild: true

      - uses: actions/upload-artifact@v4
        with:
          name: BuildLinux
          path: build/linux

  render-paper:
    name: Render report ðŸ“„
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: typst-community/setup-typst@v4
      - run: typst compile report/main.typ report/report.pdf
      - uses: actions/upload-artifact@v4
        with:
          name: Report
          path: report/report.pdf

  release:
    name: Release to GitHub ðŸš€
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux, render-paper]
    env:
      EXPORT_NAME: owgp
    steps:
      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Download Windows Build artifacts
        uses: actions/download-artifact@v4
        with:
          name: BuildWin
          path: releases/win

      - name: Zip Windows Build
        run: zip -r ${{ env.EXPORT_NAME }}_${{ github.ref_name }}_windows.zip .
        working-directory: releases/win

      - name: Download Linux Build artifacts
        uses: actions/download-artifact@v4
        with:
          name: BuildLinux
          path: releases/linux

      - name: Add executable permission to executable
        run: chmod +x releases/linux/StandaloneLinux64/StandaloneLinux64

      - name: Zip Linux Build
        run: zip -r ${{ env.EXPORT_NAME }}_${{ github.ref_name }}_linux.zip .
        working-directory: releases/linux

      - name: Download Report artifacts
        uses: actions/download-artifact@v4
        with:
          name: Report
          path: releases

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          name: "${{ github.ref_name }}"
          body: "ðŸš€ New build released!"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          files: |
            releases/win/*.zip
            releases/linux/*.zip
            releases/report.pdf
